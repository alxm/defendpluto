#!/usr/bin/env python3

"""
    Copyright 2017 Alex Margarit <http://www.alxm.org/>

    ArduboyImage.py is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    ArduboyImage.py is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with ArduboyImage.py.  If not, see <http://www.gnu.org/licenses/>.
"""

import sys
from PIL import Image

def main(PaletteName, ImageName, UniqueName):
    image = Image.open(PaletteName)
    width, height = image.size

    if width < 3 or height < 2:
        print('Invalid palette {}'.format(PaletteName))
        sys.exit(1)

    pixels = image.load()
    transparent = pixels[0, 0]
    white = []

    for x in range(0, width):
        r, g, b = pixels[x, 0]

        if r == 255 and g == 255 and b == 255:
            white.append(pixels[x, 1])

    image = Image.open(ImageName)
    width, height = image.size
    pixels = image.load()
    sprite_bytes = [width, height]
    mask_bytes = []

    for y_start in range(0, height, 8):
        for x in range(0, width):
            sprite_byte = 0
            mask_byte = 0

            for y in range(0, min(height - y_start, 8)):
                pixel = pixels[x, y_start + y]

                if pixel != transparent:
                    mask_byte |= 1 << y

                if pixel in white:
                    sprite_byte |= 1 << y

            sprite_bytes.append(sprite_byte)
            mask_bytes.append(mask_byte)

    def format_bytes(bytes_array):
        formatted_bytes = ''

        for index, byte in enumerate(bytes_array):
            if index % 16 == 0:
                formatted_bytes += '\n    '

            formatted_bytes += '0x{:0>2x},'.format(byte)

        return formatted_bytes

    contents = """\
// Generated by gfx/ArduboyImage.py

PROGMEM static const uint8_t z_data_gfx_{0}_buffer[] = {{{1}
}};

PROGMEM static const uint8_t z_data_gfx_{0}_mask[] = {{{2}
}};\
""".format(UniqueName, format_bytes(sprite_bytes), format_bytes(mask_bytes))

    print(contents)

if __name__ == '__main__':
    if len(sys.argv) != 4:
        print('Usage: {} Palette.png Image.png UniqueName'.format(sys.argv[0]))
        sys.exit(1)
    else:
        main(sys.argv[1], sys.argv[2], sys.argv[3])
